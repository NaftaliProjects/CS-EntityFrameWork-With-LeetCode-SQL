// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeetCodeProblems.Migrations
{
    [DbContext(typeof(LeetCodeProblem))]
    [Migration("20250901062843_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("low_fats")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("recyclable")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("ProductId");

                    b.ToTable("products", t =>
                        {
                            t.HasCheckConstraint("CK_low_fats_Y_N", "[low_fats] IN ('Y', 'N')");

                            t.HasCheckConstraint("CK_recyclable_Y_N", "[recyclable] IN ('Y', 'N')");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
